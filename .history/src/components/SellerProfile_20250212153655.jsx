import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import defaultAvatar from "../../src/images/profile-avatar-default.png";
import "../styles/sellerProfile.scss";
import Header from "./HomePage/Header/Header";
import UserProfileCards from "./UserProfileCards";

function SellerProfile() {
    const { id } = useParams();
    const [user, setUser] = useState(null);
    const [cards, setCards] = useState([]);
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    useEffect(() => {
        if (!id) {
            console.error("‚ùå –û—à–∏–±–∫–∞: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL");
            setError("–û—à–∏–±–∫–∞: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
            return;
        }

        console.log("üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID:", id);
        setIsLoading(true);

        fetch(`http://localhost:5000/api/users/${id}`)
            .then(response => {
                console.log("üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è):", response);
                if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞: ${response.status} ${response.statusText}`);
                return response.json();
            })
            .then(data => {
                console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", data);
                setUser(data);
                setIsLoading(false);
            })
            .catch(err => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
                setError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è: ${err.message}`);
                setIsLoading(false);
            });

        // –ó–∞–ø—Ä–æ—Å –∫–∞—Ä—Ç–æ—á–µ–∫
        fetch(`http://localhost:5000/api/user-cards/${id}`)
            .then(response => {
                console.log("üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–∫–∞—Ä—Ç–æ—á–∫–∏):", response);
                if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞: ${response.status} ${response.statusText}`);
                return response.json();
            })
            .then(data => {
                console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", data);
                setCards(data.cards || []);  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è cards
            })
            .catch(err => {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫:", err);
                setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫: ${err.message}`);
            });
    }, [id]);

    if (isLoading) return <p>Loading...</p>;
    if (error) return <p>{error}</p>;
    if (!user) return <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...</p>;

    return (
        <>
            <Header />
            <div className="seller-profile">
                <div className="profile-header">
                    <div className="profile-avatar">
                        <h1>{user.firstName} {user.lastName}</h1>
                        <p>{user.role}</p>
                        <img
                            src={user.avatar ? `http://localhost:5000${user.avatar}` : defaultAvatar}
                            alt={`${user.firstName} ${user.lastName}`}
                            className="profile-avatar"
                        />
                    </div>
                </div>
                <div className="profile-details">
                    <div className="about">
                        <h1>About</h1>
                        <p>{user.message || "This seller hasn't provided a bio."}</p>
                    </div>
                    <div className="contact">
                        <h1>Contact</h1>
                        <p>Email: {user.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
                        <p>Phone: {user.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
                    </div>
                </div>
                {cards.length > 0 ? (
                    <ul className='profile-cards-list'>
                        {cards.map(card => (
                            <li key={card._id} className='profile-cards-item'>
                                <h4>Title: {card.title}</h4>
                                <img src={`http://localhost:5000${card.image}`} className='profile-cards-img' alt="Card" />
                                <p>{card.description}</p>
                                <p>Price: {card.price}$</p>
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫.</p>  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—É—Å—Ç—ã
                )}
            </div>
        </>
    );
}

export default SellerProfile;
